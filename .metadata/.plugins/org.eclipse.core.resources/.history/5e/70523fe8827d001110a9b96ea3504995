package problems;

import java.util.HashMap;
import java.util.concurrent.LinkedBlockingQueue;

public class LRUCache {
	
	private final int maximumSize;
	private int currentSize;
	
	HashMap<Integer,Integer> LRUCacheMap;
	LinkedBlockingQueue<Integer> LRUCacheQueue;
	
	public LRUCache(int maxSize) {
		
		maximumSize = maxSize;
		currentSize = 0;
		
		LRUCacheMap = new HashMap<Integer,Integer>(maxSize);
		LRUCacheQueue = new LinkedBlockingQueue<Integer>();
	}
	
	private void freespace () {
		
		Integer oldestKey = LRUCacheQueue.poll();
		
		if ( oldestKey != null ) {
		
			LRUCacheMap.remove(oldestKey);
			currentSize = LRUCacheMap.size();
			
		}
	}
	
	public void put ( int key, int value) {
		
		if ( LRUCacheMap.containsKey(key)) {
			LRUCacheQueue.remove(key);
		}
			
		
		while ( currentSize >= maximumSize ) {
			freespace();
		}
		
		synchronized (this) {
			LRUCacheQueue.add(key);
			LRUCacheMap.put(key, value);
		}
	}
	
	public int get(int key) {
		return LRUCacheMap.get(key);
	}
	
}
