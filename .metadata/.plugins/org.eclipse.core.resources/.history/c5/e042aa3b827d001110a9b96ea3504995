package USACO;
import java.io.*;
import java.util.*;

public class wrongdirbf {
	
	 
	public static void main(String[] args) throws IOException {
		BufferedReader bin = new BufferedReader(new InputStreamReader(System.in));
		PrintWriter out = new PrintWriter ( new BufferedWriter(new OutputStreamWriter(System.out)));
		String[] details = bin.readLine().split(" ");
		int n = Integer.parseInt(details[0]);
		int q = Integer.parseInt(details[1]);
		BitSet a,b;
		a = new BitSet(n);
		String input = bin.readLine();
		String input2 = bin.readLine();
		b = new BitSet(n);
		for ( int i = 0; i < n; i++ ) {
			if((input.charAt(i) - '0') == 1)
				a.set(i);
			if((input2.charAt(i) - '0') == 1)
				b.set(i);
		}
		
		StringBuilder soln = new StringBuilder();
		
		for ( int i = 0; i < q; i++ ) {
			String[] det = bin.readLine().split(" ");
			if(det[0].equals("set_a")) {
				boolean flag=false;
				if(Integer.parseInt(det[2])==1)
					flag = true;
				a.set(n-Integer.parseInt(det[1])-1, flag);
			}
			else
				if(det[0].equals("set_b")) {
					boolean flag=false;
					if(Integer.parseInt(det[2])==1)
						flag = true;
					b.set(n-Integer.parseInt(det[1])-1, flag);
				}
				else
					soln.append(getBit(a,b,Integer.parseInt(det[1]),n));
		}
		
		out.println(soln.toString());
		out.close();
		bin.close();
			
	}
	
	public static int getBit(BitSet a, BitSet b, int idx, int size ) {
		int ind=size-idx-1;
		boolean fl,fl2;
		
		if(idx == 0) {
			if(a.get(size-1) == b.get(size-1))
				return 0;
			else
				return 1;
		}
		if(idx == size ) {
			BitSet temp = a.get(0, size);
			temp.xor(b);
			int indClear = temp.nextClearBit(ind+1);
			fl = a.get(0);
			fl2 = b.get(0);
			if(indClear >= size)
				return fl==fl2?fl==true?1:0:0;
			
			if(a.get(indClear)) 
				return fl==fl2?fl==true?1:0:(fl==true||fl2==true)?1:0;
			else 
				return fl==fl2?fl==true?1:0:0;
		}
		
		fl = a.get(ind);
		fl2 = b.get(ind);
		BitSet temp = a.get(ind+1, size);
		temp.xor(b.get(ind+1, size));
		int indClear = temp.nextClearBit(0);
		
		if(indClear+ind+1 >= size)
			return fl==fl2?0:1;
		if(a.get(indClear+ind+1)) 
			return fl==fl2?1:0;
		else 
			return fl==fl2?0:1;
		
	}
}
